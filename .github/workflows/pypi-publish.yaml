---
name: Publish Python Package

on:
  release:
    types: [created]

jobs:
  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Poetry
        run: |
          pipx install poetry
          poetry self add "poetry-dynamic-versioning[plugin]"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Generate merged and expanded schemas
        run: |
          make merged_schemas

      - name: Run schema_expander.py
        run: |
          poetry run python src/cell_annotation_schema/schema_expander.py expand -i build/general_schema.yaml -o build/general_schema.yaml
          poetry run python src/cell_annotation_schema/schema_expander.py expand -i build/BICAN_schema.yaml -o build/BICAN_schema.yaml
          poetry run python src/cell_annotation_schema/schema_expander.py expand -i build/CAP_schema.yaml -o build/CAP_schema.yaml

      - name: Package release assets
        run: |
          mkdir -p src/cell_annotation_schema/schemas
          touch src/cas_schema/schemas/__init__.py
          cp build/general_schema.yaml src/cell_annotation_schema/schemas
          cp build/BICAN_schema.yaml src/cell_annotation_schema/schemas
          cp build/CAP_schema.yaml src/cell_annotation_schema/schemas

#      - name: Build source and wheel archives
#        run: poetry build
#
#      - name: Publish Package
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish distribution to PyPI
        run: |
          poetry config repositories.pypi https://pypi.org/
          poetry version ${{ github.ref_name }}
          poetry publish --build -r pypi -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
